                      | #######################################################################
                      | # Test for copying block of size 4;
                      | #######################################################################
  0x000:              | 	.pos 0
  0x000: 30f4c8010000 | main:	irmovl Stack, %esp  	# Set up stack pointer
  0x006: 30f5c8010000 | 	irmovl Stack, %ebp  	# Set up base pointer
                      | 
                      | 	# Set up arguments for copy function and then invoke it
  0x00c: 30f004000000 | 	irmovl $4, %eax		# src and dst have 4 elements
  0x012: a00f         | 	pushl %eax
  0x014: 30f074010000 | 	irmovl dest, %eax	# dst array
  0x01a: a00f         | 	pushl %eax
  0x01c: 30f050010000 | 	irmovl src, %eax	# src array
  0x022: a00f         | 	pushl %eax
  0x024: 802a000000   | 	call ncopy		 
  0x029: 00           | 	halt			# should halt with num nonzeros in %eax
  0x02a:              | StartFun:
                      | #/* $begin ncopy-ys */
                      | ##################################################################
                      | # ncopy.ys - Copy a src block of len ints to dst.
                      | # Return the number of positive ints (>0) contained in src.
                      | #
                      | # Include your name and ID here.
                      | #
                      | # Describe how and why you modified the baseline code.
                      | #
                      | ##################################################################
                      | # Do not modify this portion
                      | # Function prologue.
  0x02a: a05f         | 	ncopy:	pushl %ebp	# Save old frame pointer
  0x02c: 2045         | 	rrmovl %esp,%ebp	# Set up new frame pointer
  0x02e: a06f         | 	pushl %esi	# Save callee-save regs
  0x030: a03f         | 	pushl %ebx
  0x032: a07f         | 	pushl %edi
  0x034: 503508000000 | 	mrmovl 8(%ebp),%ebx	# src
  0x03a: 502510000000 | 	mrmovl 16(%ebp),%edx	# len
  0x040: 50150c000000 | 	mrmovl 12(%ebp),%ecx	# dst
                      | 
                      | ##################################################################
                      | # You can modify this portion
                      | # Loop Header
  0x046: 6300         | 	xorl 	%eax , %eax  # count = 0;
  0x048: c0f2fcffffff | 	iaddl 	$-4 , %edx	#len = len -4
  0x04e: 6222         | 	andl	%edx ,  %edx  # len <= 0?
  0x050: 72d0000000   | 	jl 	remain
  0x055: 506300000000 | Loop:	mrmovl (%ebx) , %esi # read val from src...
  0x05b: 507304000000 | 	mrmovl 4(%ebx),%edi
  0x061: 406100000000 | 	rmmovl %esi , (%ecx) # ...and store it to dst
  0x067: 6266         | 	andl 	%esi ,%esi # val <= 0?
  0x069: 7174000000   | 	jle	LNpos1 # if so, goto LNpos1:
  0x06e: c0f001000000 | 	iaddl	$1 , %eax # count++ using iaddl
  0x074: 407104000000 | LNpos1: rmmovl %edi , 4(%ecx)
  0x07a: 6277         | 	andl 	%edi , %edi
  0x07c: 7187000000   | 	jle  	LNpos2
  0x081: c0f001000000 | 	iaddl	$1, %eax
  0x087: 506308000000 | LNpos2:mrmovl 8(%ebx) , %esi
  0x08d: 50730c000000 | 	mrmovl 12(%ebx),%edi
  0x093: 406108000000 | 	rmmovl %esi ,8(%ecx)
  0x099: 6266         | 	andl 	%esi ,%esi
  0x09b: 71a6000000   | 	jle	LNpos3
  0x0a0: c0f001000000 | 	iaddl	$1 , %eax
  0x0a6: 40710c000000 | LNpos3: rmmovl %edi , 12(%ecx)
  0x0ac: 6277         | 	andl 	%edi , %edi
  0x0ae: 71b9000000   | 	jle 	nextLoop
  0x0b3: c0f001000000 | 	iaddl	$1, %eax
  0x0b9:              | nextLoop:
  0x0b9: c0f310000000 | 	iaddl	$16,%ebx
  0x0bf: c0f110000000 | 	iaddl	$16,%ecx
  0x0c5: c0f2fcffffff | 	iaddl	$-4,%edx
  0x0cb: 7555000000   | 	jge	Loop            
                      | 
                      | # maybe just remain less than 3
  0x0d0: c0f204000000 | remain:	 iaddl 	$4 , %edx	# Restore the true len
  0x0d6: c0f2ffffffff | 	iaddl	$-1, %edx
  0x0dc: 7242010000   | 	jl	Done
  0x0e1: 506300000000 | 	mrmovl (%ebx) , %esi
  0x0e7: 507304000000 | 	mrmovl 4(%ebx),%edi
  0x0ed: 406100000000 | 	rmmovl %esi , (%ecx)
  0x0f3: 6266         | 	andl 	%esi ,%esi
  0x0f5: 7100010000   | 	jle	rNpos
  0x0fa: c0f001000000 | 	iaddl	$1 , %eax
  0x100:              | rNpos:	
  0x100: c0f2ffffffff | 	iaddl 	$-1, %edx
  0x106: 7242010000   | 	jl 	Done
  0x10b: 407104000000 | 	rmmovl	%edi , 4(%ecx)
  0x111: 6277         | 	andl 	%edi , %edi
  0x113: 711e010000   | 	jle 	rNpos1
  0x118: c0f001000000 | 	iaddl	$1, %eax
  0x11e:              | rNpos1:
  0x11e: c0f2ffffffff | 	iaddl 	$-1 , %edx	
  0x124: 7242010000   | 	jl	Done
  0x129: 506308000000 | 	mrmovl 8(%ebx) , %esi
  0x12f: 406108000000 | 	rmmovl %esi , 8(%ecx)
  0x135: 6266         | 	andl 	%esi ,%esi
  0x137: 7142010000   | 	jle	Done
  0x13c: c0f001000000 | 	iaddl	$1 , %eax
                      | ##################################################################
                      | # Do not modify the following section of code
                      | # Function epilogue.
  0x142:              | Done:
  0x142: b07f         | popl %edi               # Restore callee-save registers
  0x144: b03f         | popl %ebx
  0x146: b06f         | popl %esi
  0x148: 2054         | rrmovl %ebp, %esp
  0x14a: b05f         | popl %ebp
  0x14c: 90           | ret
                      | ##################################################################
                      | # Keep the following label at the end of your function
  0x14d:              | End:
                      | #/* $end ncopy-ys */
  0x14d:              | EndFun:
                      | 
                      | ###############################
                      | # Source and destination blocks 
                      | ###############################
  0x150:              | 	.align 4
  0x150:              | src:
  0x150: ffffffff     | 	.long -1
  0x154: 02000000     | 	.long 2
  0x158: fdffffff     | 	.long -3
  0x15c: 04000000     | 	.long 4
  0x160: fadebc00     | 	.long 0xbcdefa # This shouldn't get moved
                      | 
  0x170:              | 	.align 16
  0x170:              | Predest:
  0x170: fadebc00     | 	.long 0xbcdefa
  0x174:              | dest:
  0x174: abefcd00     | 	.long 0xcdefab
  0x178: abefcd00     | 	.long 0xcdefab
  0x17c: abefcd00     | 	.long 0xcdefab
  0x180: abefcd00     | 	.long 0xcdefab
  0x184:              | Postdest:
  0x184: bcfade00     | 	.long 0xdefabc
                      | 
  0x188:              | .align 4
                      | # Run time stack
  0x188: 00000000     | 	.long 0
  0x18c: 00000000     | 	.long 0
  0x190: 00000000     | 	.long 0
  0x194: 00000000     | 	.long 0
  0x198: 00000000     | 	.long 0
  0x19c: 00000000     | 	.long 0
  0x1a0: 00000000     | 	.long 0
  0x1a4: 00000000     | 	.long 0
  0x1a8: 00000000     | 	.long 0
  0x1ac: 00000000     | 	.long 0
  0x1b0: 00000000     | 	.long 0
  0x1b4: 00000000     | 	.long 0
  0x1b8: 00000000     | 	.long 0
  0x1bc: 00000000     | 	.long 0
  0x1c0: 00000000     | 	.long 0
  0x1c4: 00000000     | 	.long 0
                      | 
  0x1c8:              | Stack:
