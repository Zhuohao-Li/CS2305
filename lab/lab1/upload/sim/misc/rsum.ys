# Execution begins at address 0
	.pos	0
init: 	irmovl 	Stack, %esp
	irmovl	Stack, %ebp
	call	Main
	halt

# Sample linked list
	.align 	4
ele1:	
	.long 	0x00a
        	.long 	ele2
ele2:	
	 .long 	0x0b0
	 .long 	ele3
ele3:	
	 .long	 0xc00
	.long 	0

Main:	pushl	%ebp
	rrmovl	%esp , %ebp
	irmovl	ele1 , %eax
	pushl 	%eax
	call	rsum_list
	rrmovl 	%ebp , %esp
	popl 	%ebp
	ret

rsum_list:
	pushl	%ebp
	rrmovl	%esp , %ebp
	pushl	%ebx
	irmovl	$4 , %esi
	subl	%esi , %esp
	xorl 	%eax , %eax
	mrmovl	8(%ebp),%edx
	andl	%edx , %edx
	je	End
	mrmovl (%edx) , %ebx
	irmovl	$4 , %esi
	addl	%esi , %edx
	mrmovl (%edx) , %edi
	rmmovl	%edi , (%esp)
	call	rsum_list
	addl	%ebx , %eax

End:	addl	%esi , %esp
	popl	%ebx
	popl 	%ebp
	ret

	.pos 0x100
Stack:
